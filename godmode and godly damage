local function applyDamage(damage, godModeEnabled, godlyDamageEnabled)
    if not godModeEnabled then
        if godlyDamageEnabled then
            damage = damage * 2  -- Double the damage if godly damage is enabled
        end
        print("Damage applied:", damage)
    else
        print("Damage applied (God mode enabled):", damage)
    end
end

local damageValues = {20000}  -- Set damage to 20,000
local currentDamageIndex = 1
local godModeEnabled = true
local godlyDamageEnabled = false

-- Anti-cheat detection
local lastDamageApplied = os.time()  -- Track the time when damage was last applied

local function checkAntiCheat()
    local currentTime = os.time()
    if currentTime - lastDamageApplied < 1 then
        -- If damage is being applied too frequently, possibly due to exploiting
        print("Possible script exploit detected. Damage applied too frequently.")
        -- You can add additional actions here, such as reporting the player or taking other measures
    end
    lastDamageApplied = currentTime
end

local function onDamageApplied(damage)
    applyDamage(damage, godModeEnabled, godlyDamageEnabled)
    checkAntiCheat()  -- Check for script exploits after applying damage
end

-- Create floating icon
local icon = Instance.new("Frame")
icon.Size = UDim2.new(0, 100, 0, 100)
icon.Position = UDim2.new(0.5, -50, 0.5, -50)
icon.BackgroundColor3 = Color3.fromRGB(0, 255, 0)  -- Green color
icon.BackgroundTransparency = 0.5  -- Adjust transparency as needed
icon.Parent = game.Players.LocalPlayer.PlayerGui

-- Attach onDamageApplied function to icon touch
icon.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        onDamageApplied(damageValues[currentDamageIndex])
    end
end)

-- Toggle visibility of icon
local visible = false
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.F then
        visible = not visible
        icon.Visible = visible
    end
end)
